version: 2.1

executors:
  linuxgo:
    parameters:
    working_directory: /go/src/github.com/honeycombio/beeline-go
    docker:
      - image: circleci/golang:1.10

jobs:
  setup:
    executor: linuxgo
    steps:
      - run: echo $(expr $CIRCLE_BUILD_NUM + 1000) > ~/build_id
  test_honeytail:
    executor: linuxgo
    steps:
      - checkout
      - run: go get -v -t -d ./...
      # turn off race detection for now
      # - run: go test -race -v ./...
      - run: go test -v ./...

  build_osx:
    macos:
      xcode: "10.0.0"
    steps:
      - checkout
      - run: export BUILD_ID=$(cat ~/build_id)
      - run: echo "build ID 2dolla is >> ${BUILD_ID}"
      - run: echo "build ID is >> ${BUILD_ID}"
      - run: go install -ldflags "-X main.BuildID=1.${BUILD_ID}" github.com/honeycombio/honeytail/...

  build_debs:
    executor: linuxgo
    steps:
      - checkout
      - run: export BUILD_ID=$(cat ~/build_id)
      - run: |
          sudo apt-get -qq update
          sudo apt-get install -y build-essential rpm ruby ruby-dev
          sudo gem install fpm
      - run: |
          go install -ldflags "-X main.BuildID=1.${BUILD_ID}" github.com/honeycombio/honeytail/...
          $GOPATH/bin/honeytail --write_default_config > ./honeytail.conf
          ./build-pkg.sh -v "1.${BUILD_ID}" -t deb
          ./build-pkg.sh -v "1.${BUILD_ID}" -t rpm
          pkg-test/test.sh "1.${BUILD_ID}"
      - run: echo "finished build_debs" && find . -ls
      - store_artifacts:
          path: ./honeytail.conf
          destination: config/

  publish:
    executor: linuxgo
    steps:
      - run: echo "in publish" && find . -ls

workflows:
  build:
    jobs:
      - setup
      - test_honeytail:
          requires:
            - setup
      - build_debs:
          requires:
            - test_honeytail
      # - build_osx:
      #     requires:
      #       - test_honeytail
      - publish:
          requires:
            - build_debs
            # - build_osx

